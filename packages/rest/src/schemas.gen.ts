// This file is auto-generated by @hey-api/openapi-ts

export const $GetManyUserDtoResponseDto = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/UserDto',
      },
    },
    count: {
      type: 'number',
    },
    total: {
      type: 'number',
    },
    page: {
      type: 'number',
    },
    pageCount: {
      type: 'number',
    },
  },
  required: ['data', 'count', 'total', 'page', 'pageCount'],
} as const;

export const $UserDto = {
  type: 'object',
  properties: {
    firstName: {
      type: 'string',
    },
    lastName: {
      type: 'string',
    },
    email: {
      type: 'string',
    },
    emailVerified: {
      type: 'boolean',
    },
    isActive: {
      type: 'boolean',
    },
    fullName: {
      type: 'string',
    },
    id: {
      type: 'string',
    },
    createdAt: {
      format: 'date-time',
      type: 'string',
    },
    updatedAt: {
      format: 'date-time',
      type: 'string',
    },
  },
  required: [
    'firstName',
    'lastName',
    'email',
    'emailVerified',
    'isActive',
    'fullName',
    'id',
    'createdAt',
    'updatedAt',
  ],
} as const;

export const $CreateUpdateUserDto = {
  type: 'object',
  properties: {
    firstName: {
      type: 'string',
      maxLength: 50,
    },
    lastName: {
      type: 'string',
      maxLength: 50,
    },
    email: {
      type: 'string',
    },
    role: {
      enum: ['Admin', 'User'],
      type: 'string',
    },
    isActive: {
      type: 'boolean',
    },
  },
  required: ['firstName', 'lastName', 'email', 'role'],
} as const;

export const $ResetPasswordDto = {
  type: 'object',
  properties: {
    password: {
      type: 'string',
      minLength: 8,
      default: 'string',
    },
  },
  required: ['password'],
} as const;

export const $SignUpDto = {
  type: 'object',
  properties: {
    password: {
      type: 'string',
      minLength: 8,
      default: 'string',
    },
    firstName: {
      type: 'string',
      maxLength: 50,
    },
    lastName: {
      type: 'string',
      maxLength: 50,
    },
    email: {
      type: 'string',
    },
  },
  required: ['password', 'firstName', 'lastName', 'email'],
} as const;

export const $SuccessDto = {
  type: 'object',
  properties: {
    success: {
      type: 'boolean',
    },
    message: {
      type: 'string',
    },
  },
  required: ['success'],
} as const;

export const $SignInDto = {
  type: 'object',
  properties: {
    email: {
      type: 'string',
    },
    password: {
      type: 'string',
    },
  },
  required: ['email', 'password'],
} as const;

export const $AuthDto = {
  type: 'object',
  properties: {
    user: {
      $ref: '#/components/schemas/UserDto',
    },
    accessToken: {
      type: 'string',
    },
    refreshToken: {
      type: 'string',
    },
    expiresAt: {
      type: 'number',
    },
  },
  required: ['user', 'accessToken', 'refreshToken', 'expiresAt'],
} as const;

export const $RefreshTokenDto = {
  type: 'object',
  properties: {
    token: {
      type: 'string',
    },
  },
  required: ['token'],
} as const;

export const $TokenDto = {
  type: 'object',
  properties: {
    accessToken: {
      type: 'string',
    },
    refreshToken: {
      type: 'string',
    },
    expiresAt: {
      type: 'number',
    },
  },
  required: ['accessToken', 'refreshToken', 'expiresAt'],
} as const;

export const $GetManyPromptDtoResponseDto = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/PromptDto',
      },
    },
    count: {
      type: 'number',
    },
    total: {
      type: 'number',
    },
    page: {
      type: 'number',
    },
    pageCount: {
      type: 'number',
    },
  },
  required: ['data', 'count', 'total', 'page', 'pageCount'],
} as const;

export const $PromptDto = {
  type: 'object',
  properties: {
    title: {
      type: 'string',
    },
    description: {
      type: 'string',
    },
    createdBy: {
      type: 'string',
    },
    createdById: {
      type: 'string',
    },
    likesCount: {
      type: 'number',
    },
    isFavorite: {
      type: 'boolean',
    },
    id: {
      type: 'string',
    },
    createdAt: {
      format: 'date-time',
      type: 'string',
    },
    updatedAt: {
      format: 'date-time',
      type: 'string',
    },
  },
  required: [
    'title',
    'description',
    'createdBy',
    'createdById',
    'likesCount',
    'isFavorite',
    'id',
    'createdAt',
    'updatedAt',
  ],
} as const;

export const $CreateUpdatePromptDto = {
  type: 'object',
  properties: {
    title: {
      type: 'string',
      maxLength: 500,
    },
    description: {
      type: 'string',
    },
  },
  required: ['title', 'description'],
} as const;
